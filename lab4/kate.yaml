openapi: 3.0.1
info:
  title: Student testing service
  description: This is a sample student testing server.
  contact:
    email: gladkova.ed@edu.spbstu.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://test.localhsot.io
- url: http://test.localhsot.io
paths:
  /reg:
    post:
      summary: Registration new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                role_id:
                  type: number
        required: true
      responses:
        200:
          description: Success registration
        405:
          description: Error of registration
          content: 
            application/json:
              schema:
                type: object
                properties:
                  user_id: 
                    type: number
      x-codegen-request-body-name: body
  /auth:
    post:
      summary: Auth user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
        required: true
      responses:
        200:
          description: Success auth
          content: 
            application/json:
              schema:
                type: object
                properties:
                  role_id: 
                    type: number
        405:
          description: User not found
          content: 
            application/json:
              schema:
                type: object
                properties:
                  user_id: 
                    type: number
      x-codegen-request-body-name: body
  /bugs:
    get:
      summary: List of errors
      parameters:
        - in: query
          name: "status"
          schema:
            type: string
            enum: [open, close, fix]
          required: false
      responses:
        200:
          description: "List of errors"
          content:
            application/json:
              schema:
                type: object
                properties:
                  bugs_num:
                    type: number
                  bugs:
                    type: array
                    items: 
                      type: object
                      properties:
                        bug_id:
                          type: number
                        project_id:
                          type: number
                        text:
                          type: string
        401:
          description: "No bugs found"
  /bug:
    put:
      summary: Add new bug
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bug_id:
                  type: number
                dev_id:
                  type: number
                project_id:
                  type: number
                test:
                  type: string
        required: true
      responses:
        200:
          description: "Succesed added bug"
        405:
          description: "Bug id already existed"
    patch:
      summary: Change type of bug
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bug_id:
                  type: number
        required: true
      responses:
        200:
          description: "Succesed type of bug changed"
        405:
          description: "Bug id already fixed or solved"
        401:
          description: "Bug not found"
    get:
      summary: Verify bug
      parameters:
        - in: query
          name: "bug_id"
          schema:
            type: number
          required: true
        - in: query
          name: "resolution_id"
          schema:
            type: number
          required: true
      responses:
        200:
          description: ""
          content: 
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
        500:
          description: "Unknown implementetion"
  /quit:
    post:
      summary: Logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
        required: true
      responses:
        200:
          description: Success logout
